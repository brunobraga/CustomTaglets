/*
 *  File:         Prettify.java
 *  
 *  Purpose:      A dummy Java page containing information about pretty printing
 *                of javadoc <pre> code documentation. 
 *                THIS IS NOT A TAGLET.
 *   
 *  Author:       BRAGA, Bruno <bruno.braga@gmail.com>
 * 
 *  Copyright:
 *                Licensed under the Apache License, Version 2.0 (the "License");
 *                you may not use this file except in compliance with the License.
 *                You may obtain a copy of the License at
 * 
 *                http://www.apache.org/licenses/LICENSE-2.0
 * 
 *                Unless required by applicable law or agreed to in writing, software
 *                distributed under the License is distributed on an "AS IS" BASIS,
 *                WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 *                implied. See the License for the specific language governing
 *                permissions and limitations under the License.
 * 
 *  Notes:        This file is part of the project CustomTaglets. More info at:
 *                https://github.com/brunobraga/CustomTaglets
 * 
 *                Bugs, issues and requests are welcome at:
 *                https://github.com/brunobraga/CustomTaglets/issues
 * 
 */
package com.customtaglet;

/**
 * <b>THIS IS NOT A TAGLET!</b>
 * <p>
 * This is just documented here for the sake of explaining the pretty 
 * printing feature available in this project.
 * <p> 
 * Since more conventional way to change the output of the Javadoc would
 * require much efforts to rebuild a whole doclet (and most available 
 * do not properly work), the approach here is dirty, simple but efficient.
 * <p>
 * A file called <b><i>prettify.py</i></b>, written in Python language,
 * can be executed to "FIX" the javadoc HTML code to accept the syntax
 * highlighting feature of code documentation within javadoc. 
 * <p>
 * This makes use of the open-source project called google-code-prettify,
 * available at:
 * 
 * http://google-code-prettify.googlecode.com/svn/trunk/README.html
 *
 * 
 * <h2>Instructions</h2>
 * 
 * <ul>
 * <li>(1) Copy <i>prettify.py</i> to your project's root directory
 * <li>(2) Create the Javadoc documentation, using the &lt;pre class="prettify"&gt;
 *      tagging for code documentation in java files.
 * <li>(3) Execute <i>prettify.py</i> to make the changes in the HTML docs.
 * <li>(4) Done!
 * </ul>
 * 
 * Note: execute, from command-line: <i>prettify.py --help</i> for additional
 *       details on this script.
 * 
 * @author Bruno Braga &lt;bruno.braga@gmail.com&gt;
 * 
 * @since 1.0
 */
public final class Prettify {
    
    /**
     * Just to make sure this can never be instantiated.
     */
    private Prettify() {}
    
    /**
     * This is an example using javadoc code documentation
     * that is to be generated by <i>prettify.py</i> script.
     * 
     * <pre class="prettyprint">
     *      //
     *      // Javadoc does not support "/ * * /" type of commenting. 
     *      //
     *      public class Foo {
     *      
     *          public Foo() {}
     *          
     *          public String toUpper(String text) {
     *          
     *              // simple example to return upper-case
     *              // formatting of a particular string
     *              return text.toUpperCase();
     *          
     *          }
     *      } 
     * </pre>
     */
    public void example() {}
    
}
